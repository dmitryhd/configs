"Vimrc by Dmitry Khodakov - 04.09.14
"
"Here goes list of functions, written partially by me as shortcuts in work
"
if !exists("g:script_args")
    let g:script_args=""
endif

if !exists("g:make_command")
    let g:make_command="export PYTHONPATH=/home/dimert/NMS/nms_app; nosetests -xv --processes=60 --process-timeout=300 --process-restartworker"
endif

if !exists("g:is_console_present")
    let g:is_console_present=0
endif

func! _CreateNewHorizBuffer()
  exec "40split"
  exec "wincmd j"
  set nocursorline
endfunc

func! _CreateNewVertBuffer()
  exec "vsplit"
  exec "wincmd l"
  set nocursorline
endfunc

func! _CreateNewConsole()
  f new_console
  let g:is_console_present=1
endfunc

func! _GetRidOfConsole()
  bdelete new_console
  let g:is_console_present=0
endfunc

func! OpenTerm(vert)
  if g:is_console_present == 0
    if a:vert == 1
      call _CreateNewVertBuffer()
    else
      call _CreateNewHorizBuffer()
    endif
    if has ("win32") || has("win16")
      exec "ConqueTerm powershell.exe -NoLogo"
    else
      exec "ConqueTerm bash"
    endif
    call _CreateNewConsole()
  else
    call _GetRidOfConsole()
  endif
endfunc

func! ExecPythonScript(debug)
  if g:is_console_present == 0
    if &filetype == 'python'
      call _CreateNewHorizBuffer()
      if a:debug == 1
        exec "ConqueTerm python3 -i " . expand("%") . ' ' . g:script_args
      else
        exec "ConqueTerm python3 -m pdb " . expand("%")
      endif
      call _CreateNewConsole()
    endif
  else
    call _GetRidOfConsole()
  endif
endfunc

func! RunMakeSequence()
  if g:is_console_present == 0
    call _CreateNewHorizBuffer()
    if has ("win32") || has("win16")
      exec "ConqueTerm powershell.exe -NoLogo -Command " . g:make_command . ""
    else
      exec "ConqueTerm bash -c \'" . g:make_command . "\'"
    endif
    call _CreateNewConsole()
  else
    call _GetRidOfConsole()
  endif
endfunc

func! RunCurrentTest()
  if g:is_console_present == 0
    "echo 'new console'
    let l:fn = @%
    "echo '--------------'
    let l:current_function = matchstr(getline('.'), 'def\s*\zs\w*\ze\s*(')
    let l:cln = line('.')
    while l:cln > 0
      let l:cln -= 1
      let l:classname=matchstr(getline(l:cln), 'class\s*\zs\w*\ze\s*(')
      if l:classname != ""
        break
      endif
    endwhile
    let l:test_name = l:fn . ":" . l:classname . "." . l:current_function
    call _CreateNewHorizBuffer()
    if has ("win32") || has("win16")
      exec "ConqueTerm powershell.exe -NoLogo -Command nosetests.exe -v --pdb " . l:test_name 
    else
      exec "ConqueTerm bash -c \'nosetests -v --pdb " . l:test_name . "\'"
    endif
    call _CreateNewConsole()
  else
    echo 'closing buffer'
    call _GetRidOfConsole()
  endif
endfunc

function! BufNewFile_PY()
endfunction

function! BufNewFile_C()
endfunction

function! BufNewFile_CPP()
endfunction
